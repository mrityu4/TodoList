{"version":3,"sources":["form.js","Todo.js","Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Taskform","props","state","todo","handleSubmit","bind","handleChange","evt","this","setState","target","name","value","preventDefault","create","onSubmit","htmlFor","type","placeholder","id","onChange","Component","Todo","handleRemove","handleUpdate","remove","update","onClick","Todolist","todos","createTodo","recvdTask","newTask","uuid","finished","console","log","filter","t","map","task","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAEqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAM,CAACC,KAAK,IACjB,EAAKC,aAAa,EAAKA,aAAaC,KAAlB,gBAClB,EAAKC,aAAa,EAAKA,aAAaD,KAAlB,gBAJH,E,yDAQNE,GACTC,KAAKC,SAAL,eACKF,EAAIG,OAAOC,KAAMJ,EAAIG,OAAOE,U,mCAKxBL,GACTA,EAAIM,iBACJL,KAAKP,MAAMa,OAAX,eAAsBN,KAAKN,QAC3BM,KAAKC,SAAS,CACVN,KAAK,O,+BAMT,OACI,8BACI,uBAAMY,SAAUP,KAAKJ,aAArB,UACI,uBAAOY,QAAQ,OAAf,yBACA,uBACIC,KAAK,OACLN,KAAK,OACLO,YAAY,WACZN,MAAOJ,KAAKN,MAAMC,KAClBgB,GAAG,OACHC,SAAUZ,KAAKF,eAEnB,uD,GAtCkBe,aCAjBC,E,kDACjB,WAAYrB,GAAO,IAAD,8BACd,cAAMA,IACDsB,aAAa,EAAKA,aAAalB,KAAlB,gBAClB,EAAKmB,aAAa,EAAKA,aAAanB,KAAlB,gBAHJ,E,2DAMdG,KAAKP,MAAMwB,OAAOjB,KAAKP,MAAMkB,M,qCAG7BX,KAAKP,MAAMyB,OAAOlB,KAAKP,MAAMkB,M,+BAG7B,OACI,gCACI,4BAAIX,KAAKP,MAAME,OACf,wBAAQwB,SAAO,EAAf,kBACA,wBAAQA,QAASnB,KAAKe,aAAtB,wB,GAjBkBF,a,QCEbO,E,kDACjB,WAAY3B,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAM,CAAC2B,MAAM,IAClB,EAAKC,WAAW,EAAKA,WAAWzB,KAAhB,gBAChB,EAAKoB,OAAO,EAAKA,OAAOpB,KAAZ,gBAJE,E,uDAMP0B,GACP,IAAMC,EAAQ,2BAAID,GAAL,IAAgBZ,GAAGc,cAAQC,UAAS,IACjD1B,KAAKC,SAAS,CAACoB,MAAM,GAAD,mBAAKrB,KAAKN,MAAM2B,OAAhB,CAAsBG,Q,6BAEvCb,GACHgB,QAAQC,IAAIjB,GACZX,KAAKC,SAAS,CACVoB,MAAMrB,KAAKN,MAAM2B,MAAMQ,QAAO,SAAAC,GAAC,OAAIA,EAAEnB,KAAKA,S,6BAG3CA,EAAGmB,GACN9B,KAAKiB,OAAON,GACZ,IAAMa,EAAQ,2BAAIM,GAAL,IAAQnB,GAAGA,EAAIe,UAAS,IACrC1B,KAAKC,SAAS,CAACoB,MAAM,GAAD,mBAAKrB,KAAKN,MAAM2B,OAAhB,CAAsBG,Q,+BAEpC,IAAD,OACCH,EAAMrB,KAAKN,MAAM2B,MAAMU,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAOrB,GAAIqB,EAAKrB,GAAkBhB,KAAMqC,EAAKrC,KAAMsB,OAAQ,EAAKA,QAAvCe,EAAKrB,OACvE,OACI,gCACI,cAAC,EAAD,CAAUL,OAAQN,KAAKsB,aACtBD,S,GA3BqBR,aCMvBoB,MARf,WACE,OACE,8BACE,cAAE,EAAF,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ac6d230c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Taskform extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={todo:\"\"};\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n        this.handleChange=this.handleChange.bind(this)\r\n    } \r\n\r\n\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name]:evt.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault();\r\n        this.props.create({...this.state});\r\n        this.setState({\r\n            todo:\"\"\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"task\">Create task</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"todo\"\r\n                        placeholder=\"New Todo\"\r\n                        value={this.state.todo}\r\n                        id=\"todo\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button>Add Todo</button>\r\n                   \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Todo extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.handleRemove=this.handleRemove.bind(this)\r\n        this.handleUpdate=this.handleUpdate.bind(this)\r\n    }\r\n    handleRemove(){\r\n        this.props.remove(this.props.id)\r\n    }\r\n    handleUpdate(){\r\n        this.props.update(this.props.id)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>{this.props.todo}</p>\r\n                <button onClick>edit</button>\r\n                <button onClick={this.handleRemove}>del</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Taskform from \"./form\";\r\nimport Todo from './Todo'\r\nimport { v4 as uuid } from 'uuid';\r\nexport default class Todolist extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={todos:[]};\r\n        this.createTodo=this.createTodo.bind(this)\r\n        this.remove=this.remove.bind(this)\r\n    }\r\n    createTodo(recvdTask){\r\n        const newTask={...recvdTask, id:uuid(), finished:false}\r\n        this.setState({todos:[...this.state.todos,newTask]});\r\n    }\r\n    remove(id){\r\n        console.log(id)\r\n        this.setState({\r\n            todos:this.state.todos.filter(t => t.id!==id)\r\n        })\r\n    }\r\n    update(id,t){\r\n        this.remove(id)\r\n        const newTask={...t, id:id, finished:false}\r\n        this.setState({todos:[...this.state.todos,newTask]});\r\n    }\r\n    render() {\r\n        const todos=this.state.todos.map(task => <Todo  id={task.id} key={task.id} todo={task.todo} remove={this.remove}/>)\r\n        return (\r\n            <div>\r\n                <Taskform create={this.createTodo}/>\r\n                {todos}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\nimport Todolist from './Todolist'\nfunction App() {\n  return (\n    <div >\n      < Todolist/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}